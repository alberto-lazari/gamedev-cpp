#!/bin/bash
set -e

# Use g++ as compile command (resolves to clang++ in macOS)
CXX=g++
# `export DEBUG=true` for debug build
: ${DEBUG:=false}

file="$1"
[[ -n "$file" ]] || exit 1
shift
dir="$(realpath "$(dirname "$file")")"
filename="$(basename "$file")"
exe="$dir/bin/${filename/.cpp/}"

[[ -d "$dir/bin" ]] || mkdir "$dir/bin"

args=(
  # Place output in bin/
  -o "$exe"
  # Use standard C++ 20
  -std=c++20
  # Compile with debug information, if specified
  $(! $DEBUG || printf -- '-g')
  # Allow for additional arguments
  "$@"
)

# Compile with all specified args
"$CXX" "$file" "${args[@]}"

# Return the compiled executable path
# (callers are not required to know where it will be placed)
echo "$exe"
